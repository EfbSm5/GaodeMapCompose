plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def formattedDate = new Date().format('yyyyMMddHHmm')
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
def jksDir = keystorePropertiesFile.absolutePath.substring(0,keystorePropertiesFile.absolutePath.length() - "keystore.properties".length())

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.melody.map.myapplication"
        minSdk 21
        targetSdk 33
        versionCode 100
        versionName "1.0.0"

        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        debug {
            storeFile file(jksDir + keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
        release {
            storeFile file(jksDir + keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true

        // Disable unused AGP features
        buildConfig false
        aidl false
        renderScript false
        shaders false
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "sample-gaode_${defaultConfig.versionName}_${formattedDate}-${variant.buildType.name}.apk"
        }
    }
}

dependencies {
    implementation project(path: ':sample-common')
    implementation project(path: ':sample-ui-components')
    implementation project(path: ':gd-map-compose')
}